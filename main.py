import pandas as pd

def build_prompt(client_data):
    # Описание продуктов и сигналов (можно расширять)
    products_description = """
1. Карта для путешествий
Бенефит: повышенный кешбэк/привилегии на Путешествия, Такси, транспорт.
Сигналы: расходы в Путешествия/Отели/Такси, траты в USD/EUR, командировки/поездки.

2. Премиальная карта
Бенефит: базовый кешбэк 2–4%, повышенный кешбэк на Ювелирные украшения / Косметика / Рестораны, бесплатные снятия/переводы в пределах лимитов.
Сигналы: высокий avg_monthly_balance_KZT/депозиты, частые atm_withdrawal и переводы, активные рестораны/косметика/ювелирка.

3. Кредитная карта
Бенефит: до 10% в 3 «любимых» категориях + 10% на онлайн-услуги, льготный период, рассрочка 3–24 мес.
Сигналы: выраженные топ-категории трат, онлайн-сервисы, installment_payment_out / cc_repayment_out.

4. Обмен валют
Бенефит: экономия на спреде, авто-покупка по целевому курсу.
Сигналы: fx_buy/fx_sell, регулярные USD/EUR траты.

5. Кредит наличными
Бенефит: быстрый доступ к финансированию, гибкие погашения.
Сигналы: outflows ≫ inflows, низкий остаток, loan_payment_out.

6. Депозит мультивалютный
Бенефит: проценты + хранение валют, свободные пополнения/снятия.
Сигналы: свободный остаток + FX-активность + зарубежные траты.

7. Депозит сберегательный
Бенефит: максимальная ставка, без пополнений/снятий.
Сигналы: крупный остаток, низкая волатильность расходов.

8. Депозит накопительный
Бенефит: повышенная ставка, пополнение «да», снятие «нет».
Сигналы: небольшие остатки + периодические пополнения.

9. Инвестиции (брокерский счёт)
Бенефит: сниженные комиссии, низкий порог входа.
Сигналы: свободные деньги, интерес к инвестициям.

10. Золотые слитки
Бенефит: защитный актив/диверсификация.
Сигналы: ликвидность, интерес к драгоценностям/сбережению стоимости.
"""

    # Формируем промт под клиента
    prompt = f"""
Ты — рекомендательная система банка.
На вход тебе даются данные о клиенте: его топ-категории расходов, типы транзакций, баланс и другие сигналы. 
Твоя задача: выбрать 1 наиболее подходящий продукт из списка и составить персональное push-уведомление.

Описание продуктов:
{products_description}

Формат входных данных (пример):
{client_data}

Формат ответа:
"Имя, персонализированное push-уведомление (1–2 предложения, с выгодой для клиента)."

"""
    return prompt

# Пример: читаем CSV конкретного клиента
df = pd.read_csv("db/client_21_transactions_3m.csv")

# Считаем, сколько раз встречается каждая категория
top5 = df['category'].value_counts()
top5_cat = top5.index.tolist()
from_third = top5_cat[2:5]

print(from_third)

# Берём самую популярную категорию
top_category = top5.idxmax()
print("Самая частая категория:", top_category)
print(df.loc[0, 'client_code'], df.loc[0, 'name'])

client = {
    "name": df.loc[0, 'name'],
    "top_category": from_third,

}
print(client)